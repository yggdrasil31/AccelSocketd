//############################################################################//
// HEAD : (c) ACTIA 2014 : " Any copie and re-utilisation of this file without
//                           the written consent of ACTIA is forbidden "
//        --------------------------------------------------------------------
//        Classification :  (-)No   (X)Confident. ACTIA   (X)Confident. Client
//        --------------------------------------------------------------------
//        AccelSocketd : Module Name
//##########################7#################################################//
// FILE : AccelSocketd_i2c.h (SOURCE)
//----------------------------------------------------------------------------//
// DESC : The i2c management source for lis3dh accelerometer.
//----------------------------------------------------------------------------//
// HIST : $Log: AccelSocketd_i2c.h,v $
// HIST : Version |   Date   | Author | Description                           
//        --------------------------------------------------------------------
//         01.00  | 24/07/14 |  JTou  | Initial version
//                |          |        |
//############################################################################//

#ifndef __ACCELSOCKETD_I2C_H__
#define __ACCELSOCKETD_I2C_H__

//****************************************************************************//
// INCLIB
//****************************************************************************//


//****************************************************************************//
// INCUSER
//****************************************************************************// 


//****************************************************************************//
// DEFINITION
//****************************************************************************// 
// I2C setup
#define ACCELSOCKETD_I2C_ADAPTER				((char)0x00)
#define ACCELSOCKETD_I2C_ADDRESS				((char)0x24)

//****************************************************************************//
// MACRO0x00
//****************************************************************************//
  
//****************************************************************************//
// TYPEDEF
//****************************************************************************//


//****************************************************************************//
// CONST
//****************************************************************************//

//****************************************************************************//
// EXPORT
//****************************************************************************//

//****************************************************************************//
// INTERN
//****************************************************************************//

//****************************************************************************//
// REG
//****************************************************************************//
  
//****************************************************************************//
// PROTO
//****************************************************************************//
elibAccelSocketBool I2c_bOpen(void);
void I2c_vClose(void);

elibAccelSocketBool I2c_bReadRegister(uint8_t avu8Register, uint8_t* apu8Value);
elibAccelSocketBool I2c_bWriteRegister(uint8_t avu8Register, uint8_t avu8Value);
elibAccelSocketBool I2c_bSetDataRate(uint8_t avu8DataRate);
elibAccelSocketBool I2c_bGetDataRate(uint8_t* apu8DataRate);
elibAccelSocketBool I2c_bSetScaleRange(uint8_t avu8Scale);
elibAccelSocketBool I2c_bGetScaleRange(uint8_t* apu8Scale);
elibAccelSocketBool I2c_bSetSelfTestMode(uint8_t avu8Mode);
elibAccelSocketBool I2c_bGetXYZ(TstAccel_XYZ* apstAccel);

#endif





